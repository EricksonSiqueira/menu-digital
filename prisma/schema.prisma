generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id        String        @id @default(uuid())
  name      String        @db.VarChar(45)
  slug      String        @db.VarChar(45)
  status    CompanyStatus @default(ACTIVE)
  info      Info?
  branchs   Branch[]
  products  Products[]
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
}

model Branch {
  id         String        @id @default(uuid())
  name       String        @db.VarChar(45)
  slug       String        @db.VarChar(45)
  status     CompanyStatus @default(ACTIVE)
  companyId  String
  info       Info?
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt
  company    Company       @relation(fields: [companyId], references: [id])
}

model Info {
  id              String    @id @default(uuid())
  cnpj            String    @db.VarChar(14)
  email           String    @db.VarChar(45)
  companyLogoUrl  String
  companyThemeUrl String
  address         Address?
  companyId       String    @unique
  branchId        String    @unique
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  company         Company   @relation(fields: [companyId], references: [id])
  branch          Branch    @relation(fields: [branchId], references: [id])
}

model Address {
  id        String        @id @default(uuid())
  address   String        @db.VarChar(255)
  zipCode   String        @db.VarChar(10)
  infoId    String        @unique
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt

  info      Info          @relation(fields: [infoId], references: [id], onDelete: Cascade)
}

model Products {
  id             String          @id @default(uuid())
  name           String          @db.VarChar(45)
  price          Decimal         @db.Money
  companyId      String?
  materials      Materials[]
  productsImages ProductImages[]
  company        Company?        @relation(fields: [companyId], references: [id], onDelete: Cascade)
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
}

model ProductImages {
  id        String   @id @default(uuid())
  imageUrl  String
  alt       String   @db.VarChar(500)
  productId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  products  Products @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model Materials {
  id        String   @id @default(uuid())
  name      String
  productId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  products  Products @relation(fields: [productId], references: [id], onDelete: Cascade)
}

enum CompanyStatus {
  ACTIVE
  INACTIVE
}
